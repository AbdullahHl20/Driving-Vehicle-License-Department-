<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmQAAAMcAAAAtAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEoAAAD/AAAA/wAAAPkAAABzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAJoAAAAhAAAA4gAAAP8AAAD/AAAA/wAA
        AMIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAA/wAAAPcAAAD/AAAA/wAA
        AP8AAAD6AAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADsAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAIIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAA
        AP8AAAD/AAAA/wAAAP8AAAD+AAAAZQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAADvAAAA/wAAAP8AAAD/AAAA/wAAAO4AAAAHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkAAABhAAAAAAAAAFoAAAD7AAAA/wAAAP8AAAD7AAAAWQAA
        AAAAAABiAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAA4gAAAOgAAAAfAAAAAAAAAC0AAAB+AAAAfgAA
        ACwAAAAAAAAAIAAAAOgAAADhAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAAD/AAAA/wAAAN0AAAA6AAAAAAAA
        AAAAAAAAAAAAAAAAADoAAADdAAAA/wAAAP8AAABqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvQAAAP8AAAD/AAAA/wAA
        APoAAAA8AAAAAAAAAAAAAAA9AAAA+wAAAP8AAAD/AAAA/wAAALsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADiAAAA/wAA
        AP8AAAD/AAAAgwAAAAAAAAARAAAACwAAAAAAAACFAAAA/wAAAP8AAAD/AAAA4QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AOUAAAD/AAAA/wAAAP8AAAA7AAAAAAAAAM4AAADOAAAAAAAAADwAAAD/AAAA/wAAAP8AAADkAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAxAAAAP8AAAD/AAAA/wAAAFgAAAAAAAAAZgAAAGoAAAAAAAAAWQAAAP8AAAD/AAAA/wAA
        AMMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAB5AAAA/wAAAP8AAAD/AAAA0gAAAA4AAAAAAAAAAAAAAA4AAADTAAAA/wAA
        AP8AAAD/AAAAdwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEAAADuAAAA/wAAAP8AAAD/AAAA4QAAAIoAAACKAAAA4QAA
        AP8AAAD/AAAA/wAAAOwAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEkAAAD8AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD9AAAATgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFEAAADxAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA8AAAAE8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABUAAACCAAAAzwAAAPQAAAD0AAAAzgAAAIEAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///8f///+D///8A////AP///wH///8A////AP///wH8MHkGMAAwsCAAA
        NAAxgMAAMcCAADHAgAAwgEQEMAgEBDgMBAw+Pxzc//AP///wD///yBP//4Qh//+Dwf//gYH//4JB//+C
        Qf//gkH//4GB//+AAf//wAP//+AH///wD/8=
</value>
  </data>
</root>